<Window x:Class="ProiectLicenta.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:ProiectLicenta.MVVM.ViewModel"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf" xmlns:lvc1="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        mc:Ignorable="d"
        Height="1000" Width="1600"
        WindowStyle="None"
        ResizeMode="CanResize"
        Icon="/heartbeat.jpg"
        Background="Transparent"
        AllowsTransparency="True"
        MouseMove="Window_MouseMove">
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <DataTemplate x:Key="DictionaryTemplate">
            <Border BorderBrush="Black"
            BorderThickness="0, 0, 0, 2"
            Width="1600">
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Key}"
                                       Foreground="#F5761A"
                                       FontWeight="Bold"
                                       FontSize="20"
                                       Margin="5,0,0,0"
                                       Height="25"
                                       VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding Value}"
                                       Grid.Column="1"
                                       Foreground="Cyan"
                                       FontWeight="Bold"
                                       FontSize="20"
                                       Margin="5,0,10,0"
                                       Height="25"
                                       VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
        </DataTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border Background="#272527"
            CornerRadius="20">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="67*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!-- Title -->
            <TextBlock Text="MonitorIT"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       FontSize="22" Margin="0,10,0,0"/>
            <TextBlock Text="Server Monitor"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       FontSize="22" Margin="0,35,0,0"/>
            <!-- Exit Button-->
            <Button Grid.Column="2"
                    Width="30" 
                    Height="30"
                    Margin="1277,0,0,0" 
                    Background="Transparent"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Click="CloseButton_Click">
                <Grid>
                    <Rectangle Width="28" 
                               Height="28" 
                               Fill="Transparent" 
                               Stroke="Orange" 
                               StrokeThickness="4" 
                               Margin="-1,-1,-1,-1"/>
                    <Line X1="7" 
                          Y1="7" 
                          X2="21"
                          Y2="21" 
                          Stroke="Orange"
                          StrokeThickness="2" Margin="-1,-1,1,1"/>
                    <Line X1="7" 
                          Y1="21" 
                          X2="21" 
                          Y2="7" 
                          Stroke="Orange" 
                          StrokeThickness="2" Margin="-1,-1,1,1"/>
                </Grid>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          Content="{TemplateBinding Content}"
                                                          RecognizesAccessKey="True"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <!-- Radio Buttons -->
            <StackPanel Grid.Row="1">
                <RadioButton Content="System Data"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding SystemDataViewCommand}"/>
                <RadioButton Content="CPU Usage"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding CpuDataViewCommand}"/>
                <RadioButton Content="RAM Usage"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding RamDataViewCommand}"/>
                <RadioButton Content="Disk Usage"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding DiskDataViewCommand}"/>
                <RadioButton Content="Network Usage"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding NetworkDataViewCommand}"/>
            </StackPanel>
            <!-- Text Boxes -->
            <!-- IP -->
            <Border CornerRadius="10"
                    Background="#353340"
                    Height="40"
                    Margin="32,18,1215,17"
                    Grid.Column="1"
                    Grid.ColumnSpan="2">
                <Grid>
                    <TextBox Height="40"
                             BorderThickness="0"
                             Background="Transparent"
                             VerticalAlignment="Center"
                             Padding="10"
                             Foreground="#CFCFCF"
                             Name="RemoteIPInput"/>
                    <TextBlock IsHitTestVisible="False"
                                Text="Introduce the server's IP"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="10, 0, 0, 0"
                                FontSize="12"
                                Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=RemoteIPInput}"
                                                 Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                </Grid>
            </Border>
            <!-- Community String -->
            <Border CornerRadius="10"
                    Background="#353340"
                    Height="40"
                    Margin="154,18,1064,17"
                    Grid.Column="2">
                <Grid>
                    <TextBox Height="40"
                             BorderThickness="0"
                             Background="Transparent"
                             VerticalAlignment="Center"
                             Padding="10"
                             Foreground="#CFCFCF"
                             Name="CommunityStringInput"
                             HorizontalAlignment="Center" 
                             Width="121"/>
                    <TextBlock IsHitTestVisible="False"
                                Text="Community string"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="10, 0, 0, 0"
                                FontSize="12"
                                Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=CommunityStringInput}"
                                                         Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            <!-- Mail -->
            <Border CornerRadius="10"
                    Background="#353340"
                    Height="40"
                    Margin="300,18,820,17"
                    Grid.Column="2">
                <Grid>
                    <TextBox Height="40"
                             BorderThickness="0"
                             Background="Transparent"
                             VerticalAlignment="Center"
                             Padding="10"
                             Foreground="#CFCFCF"
                             Name="MailInput"
                             HorizontalAlignment="Left" 
                             Width="225"/>
                    <TextBlock IsHitTestVisible="False"
                                Text="Introduce your mail address."
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="10, 0, 0, 0"
                                FontSize="12"
                                Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=MailInput}"
                                                 Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            <!-- Port -->
            <Border CornerRadius="10"
                    Background="#353340"
                    Height="40"
                    Margin="550,18,638,17"
                    Grid.Column="2">
                <Grid>
                    <TextBox Height="40"
                             BorderThickness="0"
                             Background="Transparent"
                             VerticalAlignment="Center"
                             Padding="10"
                             Foreground="#CFCFCF"
                             Name="PortInput"
                             HorizontalAlignment="Center" 
                             Width="153"/>
                    <TextBlock IsHitTestVisible="False"
                                Text="Introduce port if changed."
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="10, 0, 0, 0"
                                FontSize="12"
                                Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=PortInput}"
                                                 Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            <!-- Username -->
            <Border CornerRadius="10"
                    Background="#353340"
                    Height="40"
                    Margin="739,18,488,17"
                    Grid.Column="2">
                <Grid>
                    <TextBox Height="40"
                             BorderThickness="0"
                             Background="Transparent"
                             VerticalAlignment="Center"
                             Padding="10"
                             Foreground="#CFCFCF"
                             Name="UserInput"
                             HorizontalAlignment="Center" 
                             Width="113"/>
                    <TextBlock IsHitTestVisible="False"
                                Text="Username"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="10, 0, 0, 0"
                                FontSize="12"
                                Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=UserInput}"
                                                 Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            <!-- Password -->
            <Border CornerRadius="10"
                    Background="#353340"
                    Height="40"
                    Margin="886,18,341,17"
                    Grid.Column="2">
                <Grid>
                    <PasswordBox Height="40"
                                 BorderThickness="0"
                                 Background="Transparent"
                                 VerticalAlignment="Center"
                                 Padding="10"
                                 Foreground="#CFCFCF"
                                 x:Name="PassInput"
                                 HorizontalAlignment="Center"
                                 Width="113"/>
                    <TextBlock IsHitTestVisible="False"
                               Text="Password"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="10, 0, 0, 0"
                               FontSize="12"
                               Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsKeyboardFocused, ElementName=PassInput}"
                                                 Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            <!-- Connect Button -->
            <Button Click="Search_Click"
                    Grid.Column="2"
                    Width="50"
                    Height="40"
                    Margin="1031,0,259,0"
                    BorderThickness="0"
                    Background="Transparent"
                    VerticalAlignment="Center"
                    Command="{Binding LoadConfigCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Images/search-bar-01.png" Width="40" Height="40"/>
                </StackPanel>
            </Button>
            <!-- Main Content Window -->
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Disabled"
                          Padding="10"
                          Background="Transparent"
                          Grid.Row="1"
                          Grid.Column="1"
                          Grid.ColumnSpan="2">
                <Border BorderBrush="Transparent"
                        BorderThickness="1"
                        Background="Transparent"
                        CornerRadius="5"
                        Padding="10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <!-- Data rows -->
                            <RowDefinition Height="Auto"/>
                            <!-- Chart -->
                            <RowDefinition Height="Auto"/>
                            <!-- Chart -->
                            <RowDefinition Height="100"/>
                            <!-- Chart -->
                            <RowDefinition Height="Auto"/>
                            <!-- Label -->
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Main data -->
                        <ListView Grid.Row="0"
                                  ItemsSource="{Binding CurrentView}"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  ItemTemplate="{StaticResource DictionaryTemplate}"
                                  Padding="0,0,5,0">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <ComboBox Grid.Row="2"
                                  ItemsSource="{Binding DropdownItems}" 
                                  SelectedItem="{Binding SelectedInterface, Mode=TwoWay}"
                                  Height="30"
                                  Width="250"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center" Margin="30,0,0,0"
                                  Background="Transparent"
                                  BorderThickness="10"
                                  Visibility="{Binding IsComboBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <!-- live chart -->
                        <lvc:CartesianChart Grid.Row="1"
                                            Background="Transparent"
                                            Height="300"
                                            Width="650"
                                            HorizontalAlignment="Left"
                                            Name="LiveChart"
                                            Zoom="X"
                                            Visibility="{Binding AreGraphsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <lvc:CartesianChart.Series>
                                <lvc:LineSeries Title="Usage"
                                                LineSmoothness="0"
                                                Values="{Binding LiveUsageChart}" />
                            </lvc:CartesianChart.Series>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="Timestamp Live"
                                          Labels="Timestamp Live"
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis Title="Usage (%) Live" 
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisY>
                        </lvc:CartesianChart>
                        <!-- daily chart -->
                        <lvc:CartesianChart Grid.Row="1"
                                            Background="Transparent"
                                            Height="300"
                                            Width="650"
                                            HorizontalAlignment="Right"
                                            Name="DailyChart"
                                            Zoom="X"
                                            Visibility="{Binding AreGraphsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <lvc:CartesianChart.Series>
                                <lvc:LineSeries Title="Usage" 
                                                LineSmoothness="0"
                                                Values="{Binding DailyUsageChart}" />
                            </lvc:CartesianChart.Series>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="Timestamp Daily"
                                          Labels="Timestamp Daily"
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis Title="Usage (%) Daily" 
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisY>
                        </lvc:CartesianChart>
                        <!-- weekly chart -->
                        <lvc:CartesianChart Grid.Row="3"
                                            Background="Transparent"
                                            Height="300"
                                            Width="650"
                                            HorizontalAlignment="Left"
                                            Name="WeeklyChart"
                                            Zoom="X"
                                            Visibility="{Binding AreGraphsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <lvc:CartesianChart.Series>
                                <lvc:LineSeries Title="Usage"
                                                LineSmoothness="0"
                                                Values="{Binding WeeklyUsageChart}" />
                            </lvc:CartesianChart.Series>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="Timestamp Weekly"
                                          Labels="Timestamp Weekly"
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis Title="Usage (%) Weekly" 
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisY>
                        </lvc:CartesianChart>
                        <!-- monthly chart -->
                        <lvc:CartesianChart Grid.Row="3"
                                            Background="Transparent"
                                            Height="300"
                                            Width="650"
                                            HorizontalAlignment="Right"
                                            Name="MonthlyChart"
                                            Zoom="X"
                                            Visibility="{Binding AreGraphsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <lvc:CartesianChart.Series>
                                <lvc:LineSeries Title="Usage"
                                                LineSmoothness="0"
                                                Values="{Binding MonthlyUsageChart}" />
                            </lvc:CartesianChart.Series>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="Timestamp Monthly"
                                          Labels="Timestamp Monthly"
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis Title="Usage (%) Monthly" 
                                          FontSize="14"/>
                            </lvc:CartesianChart.AxisY>
                        </lvc:CartesianChart>
                        <!-- pie chart -->
                        <lvc:PieChart Name="DiskDataPiechart"
                                      Grid.Row="1"
                                      Height="500"
                                      Width="500"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Visibility="{Binding ArePiechartsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <lvc:PieChart.Series>
                                <lvc:PieSeries Title="Disk Data Used Space (GB)  "
                                               Values="{Binding DiskDataUsedSpacePiechart}"
                                               DataLabels="True"
                                               FontSize="30">
                                    <lvc:PieSeries.Fill>
                                        <lvc1:SolidColorBrush Color="#FF7B68EE"/>
                                        <!-- Used space color -->
                                    </lvc:PieSeries.Fill>
                                    <lvc:PieSeries.PushOut>0.1</lvc:PieSeries.PushOut>
                                    <!-- Adjust the push out for separation -->
                                </lvc:PieSeries>
                                <lvc:PieSeries Title="Disk Data Free Space (GB)  "
                                               Values="{Binding DiskDataFreeSpacePiechart}"
                                               DataLabels="True"
                                               FontSize="30">
                                    <lvc:PieSeries.Fill>
                                        <lvc1:SolidColorBrush Color="#FF2E8B57"/>
                                        <!-- Free space color -->
                                    </lvc:PieSeries.Fill>
                                </lvc:PieSeries>
                            </lvc:PieChart.Series>
                        </lvc:PieChart>
                        <!-- notification message if needs to be present -->
                        <TextBlock Grid.Row="4"
                               x:Name="error" 
                               FontSize="30"
                               Foreground="#F5761A"
                               Text="{Binding ErrorLabelText}"
                               Visibility="{Binding IsLabelVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </Border>
            </ScrollViewer>
        </Grid>
    </Border>
</Window>
